{"remainingRequest":"/Users/lirongzhi/Documents/深圳善链/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lirongzhi/Documents/深圳善链/src/view/login/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lirongzhi/Documents/深圳善链/src/view/login/index.vue","mtime":1572538946794},{"path":"/Users/lirongzhi/Documents/深圳善链/node_modules/cache-loader/dist/cjs.js","mtime":1572539003414},{"path":"/Users/lirongzhi/Documents/深圳善链/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {DropdownMenu, DropdownItem, Toast} from 'vant';\nimport mixins from '../../common/mixin';\n\nexport default {\n    components: {\n        DropdownMenu,\n        DropdownItem,\n        Toast\n    },\n    mixins: [mixins],\n    data: () => ({\n        mobile: '',            // 手机\n        showCodeDialog: false  // 验证码弹框\n    }),\n    created() {\n\n    },\n    methods: {\n        // 获取输入框状态\n        handleGetStatus: function () {\n            let str = this.mobile.toString().replace(/ /g, '');\n            let len = str.length;\n            switch (true) {\n                case len > 11:\n                    str = str.substr(0, 3) + ' ' + str.substr(3, 4) + ' ' + str.substr(7, 4);\n                    this.mobile = str;\n                    break;\n                case len > 7:\n                    str = str.substr(0, 3) + ' ' + str.substr(3, 4) + ' ' + str.substr(7);\n                    this.mobile = str;\n                    break;\n                case len > 3:\n                    str = str.substr(0, 3) + ' ' + str.substr(3);\n                    this.mobile = str;\n                    break;\n                default:\n                    this.mobile = str;\n            }\n        },\n        // 图形验证码\n        handleSlideVerify: function () {\n            if(!this.handleChackPnone(this.mobile.replace(/[ ]/g,\"\"))){\n                this.$toast.center('请输入正确的手机格式');\n                return;\n            }\n\n            this.showCodeDialog = !this.showCodeDialog;\n            window.scrollTo(0, 0);\n        },\n        // 登录操作\n        handleLogin: function () {\n            // 校验手机\n            if(!this.handleChackPnone(this.mobile.replace(/[ ]/g,\"\"))){\n                this.$toast.center('请输入正确的手机格式');\n                return false;\n            }\n            // console.log(this.mobile.replace(/[ ]/g,\"\"));\n            this.request({\n                url: 'api/checkNewAccount',\n                method: 'GET',\n                data: {\n                    mobile: this.mobile.replace(/[ ]/g,\"\")\n                },\n                success: (response) => {\n                    if(response.is_used == 0){\n                        // 新用户\n                        this.$router.push({\n                            path: '/login/code',\n                            query: {\n                                type: 'register',\n                                title: '验码登录',\n                                mobile: this.mobile,\n                                inviter: this.$route.query.inviter ? this.$route.query.inviter : 0,\n                                collBack: this.$route.query.collBack ? this.$route.query.collBack : '/'\n                            }\n                        });\n                    } else {\n                        // 旧用户\n                        this.$router.push({\n                            path: '/loginAccount',\n                            query: {\n                                mobile: this.mobile,\n                                collBack: this.$route.query.collBack ? this.$route.query.collBack : '/'\n                            }\n                        });\n                    }\n                },\n                error: (response) => {\n\n                },\n                complete: () => {\n                }\n            });\n        },\n    }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/view/login","sourcesContent":["<template>\n    <div class=\"login\">\n        <div class=\"login-hender\">\n            <img src=\"../../image/login.png\" alt=\"\">\n        </div>\n        <div class=\"login-body\">\n            <div class=\"title\">Hello</div>\n            <p>欢迎进入UTD</p>\n            <div class=\"input\">\n                <span>+86</span>\n                <input maxlength=\"13\" type=\"tel\" v-model=\"mobile\" @input=\"handleGetStatus\" @focus=\"handleInputBlurBack\" :clearable=\"true\" placeholder=\"请输入手机号\" />\n            </div>\n            <div class=\"next\" @click=\"handleLogin\">下一步</div>\n        </div>\n    </div>\n</template>\n\n<style src=\"./index.css\" scoped></style>\n\n<script>\n    import {DropdownMenu, DropdownItem, Toast} from 'vant';\n    import mixins from '../../common/mixin';\n\n    export default {\n        components: {\n            DropdownMenu,\n            DropdownItem,\n            Toast\n        },\n        mixins: [mixins],\n        data: () => ({\n            mobile: '',            // 手机\n            showCodeDialog: false  // 验证码弹框\n        }),\n        created() {\n\n        },\n        methods: {\n            // 获取输入框状态\n            handleGetStatus: function () {\n                let str = this.mobile.toString().replace(/ /g, '');\n                let len = str.length;\n                switch (true) {\n                    case len > 11:\n                        str = str.substr(0, 3) + ' ' + str.substr(3, 4) + ' ' + str.substr(7, 4);\n                        this.mobile = str;\n                        break;\n                    case len > 7:\n                        str = str.substr(0, 3) + ' ' + str.substr(3, 4) + ' ' + str.substr(7);\n                        this.mobile = str;\n                        break;\n                    case len > 3:\n                        str = str.substr(0, 3) + ' ' + str.substr(3);\n                        this.mobile = str;\n                        break;\n                    default:\n                        this.mobile = str;\n                }\n            },\n            // 图形验证码\n            handleSlideVerify: function () {\n                if(!this.handleChackPnone(this.mobile.replace(/[ ]/g,\"\"))){\n                    this.$toast.center('请输入正确的手机格式');\n                    return;\n                }\n\n                this.showCodeDialog = !this.showCodeDialog;\n                window.scrollTo(0, 0);\n            },\n            // 登录操作\n            handleLogin: function () {\n                // 校验手机\n                if(!this.handleChackPnone(this.mobile.replace(/[ ]/g,\"\"))){\n                    this.$toast.center('请输入正确的手机格式');\n                    return false;\n                }\n                // console.log(this.mobile.replace(/[ ]/g,\"\"));\n                this.request({\n                    url: 'api/checkNewAccount',\n                    method: 'GET',\n                    data: {\n                        mobile: this.mobile.replace(/[ ]/g,\"\")\n                    },\n                    success: (response) => {\n                        if(response.is_used == 0){\n                            // 新用户\n                            this.$router.push({\n                                path: '/login/code',\n                                query: {\n                                    type: 'register',\n                                    title: '验码登录',\n                                    mobile: this.mobile,\n                                    inviter: this.$route.query.inviter ? this.$route.query.inviter : 0,\n                                    collBack: this.$route.query.collBack ? this.$route.query.collBack : '/'\n                                }\n                            });\n                        } else {\n                            // 旧用户\n                            this.$router.push({\n                                path: '/loginAccount',\n                                query: {\n                                    mobile: this.mobile,\n                                    collBack: this.$route.query.collBack ? this.$route.query.collBack : '/'\n                                }\n                            });\n                        }\n                    },\n                    error: (response) => {\n\n                    },\n                    complete: () => {\n                    }\n                });\n            },\n        }\n    }\n</script>\n"]}]}