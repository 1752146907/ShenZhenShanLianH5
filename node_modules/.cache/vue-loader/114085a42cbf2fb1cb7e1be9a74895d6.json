{"remainingRequest":"/Users/lirongzhi/Documents/深圳善链/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lirongzhi/Documents/深圳善链/src/view/plus/shopx/order/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lirongzhi/Documents/深圳善链/src/view/plus/shopx/order/index.vue","mtime":1572538946847},{"path":"/Users/lirongzhi/Documents/深圳善链/node_modules/cache-loader/dist/cjs.js","mtime":1572539003414},{"path":"/Users/lirongzhi/Documents/深圳善链/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport mixins from '../../../../common/mixin';\nimport navBar from '../../../../component/navBar';\nimport {Icon, Dialog, Popup,Toast } from 'vant';\nimport countTo from 'vue-count-to';\n\nexport default {\n    components: {\n        navBar,\n        Icon,\n        Dialog,\n        Popup,\n        countTo,\n        Toast\n    },\n    mixins: [mixins],\n    data: () => ({\n        show: false,\t\t// 是否激活支付按钮\n        code: \"\",\n        codeTime: 60,       // 手机倒计时\n        isCode: false,     // 是否显示发生验证码\n        switcha: true,\n        order: {},   //订单信息\n        comments: \"\",  //买家留言\n        orderAmount: {},   //订单支付信息\n        isActivw: false,     //支付按钮\n        orderID: \"\",         //订单ID\n        isDefaultAddress: false,       //判断是否有默认地址\n        icon: 3,   //支付方式  1等于ETH 2等于INE 3等于UTD\n        unit: \"UTD\",      //单位\n        transferRecord: {},             // 用户地址信息\n        support:[],                  //支持的付款方式\n        express_price:0             //运费\n    }),\n    // 设置路由钩子，存储页面来源\n    beforeRouteEnter(to, from, next) {\n        next(vm => {          //  这里的vm指的就是vue实例，可以用来当做this使用\n            sessionStorage.setItem('url_from', from.path);\n        })\n    },\n    created() {\n\n    },\n    mounted() {\n        this.order = JSON.parse(this.$route.query.order);\n        console.log(JSON.parse(this.$route.query.order));\n        this.handleGetUserAddress();\n\n    },\n    methods: {\n      //商品信息\n        information:function () {\n            this.request({\n                url: 'api/store/order',\n                method: 'GET',\n                data: {\n                    id: this.order.id,\n                    quantity: this.order.order_total_quantity,\n                    sku_id: this.order.sku_id,\n                    remark: ''\n                },\n                success: (response) => {\n                    this.express_price = response.express_price\n                  console.log(response)\n                },\n                error: (response) => {\n                },\n                complete: () => {\n\n                }\n            });\n        },\n        //提交订单\n        showPopup: function () {\n            this.request({\n                url: 'api/store/order',\n                method: 'POST',\n                data: {\n                    id: this.order.id,\n                    quantity: this.order.order_total_quantity,\n                    sku_id: this.order.sku_id,\n                    remark: this.comments,\n                },\n                success: (response) => {\n                    this.orderID = response.id;\n                    //获取订单支持币种默认选择第一个\n                    this.request({\n                        url: 'api/store/goods',\n                        method: 'POST',\n                        data: {\n                            id: this.order.id,\n                        },\n                        success: (response) => {\n                            this.support =response.detail.available_pay_type;\n                            if (response.detail.available_pay_type[0] == 1) {\n                                this.icon = 1;\n                                this.unit = \"ETH\";\n                            }\n                            if (response.detail.available_pay_type[0] == 2) {\n                                this.icon = 2;\n                                this.unit = \"INE\";\n                            }\n                            if (response.detail.available_pay_type[0] == 3) {\n                                this.icon = 3;\n                                this.unit = \"UTD\";\n                            }\n                            //支付信息前置获取\n                            this.request({\n                                url: 'api/store/order',\n                                method: 'PUT',\n                                data: {\n                                    id: this.orderID,\n                                    pay_type: response.detail.available_pay_type[0]\n                                },\n                                success: (response) => {\n                                    this.orderAmount = response;\n                                    this.show = true;\n                                    if (Number(this.orderAmount.balance) >= Number(this.orderAmount.amount)) {\n                                        this.isActivw = true;\n                                    } else {\n                                        this.isActivw = false;\n                                    }\n                                },\n                                error: (response) => {\n                                },\n                                complete: () => {\n                                }\n                            });\n                        },\n                        error: (response) => {\n                        },\n                        complete: () => {\n                        }\n                    });\n\n                },\n                error: (response) => {\n                },\n                complete: () => {\n                }\n            });\n        },\n        cancel: function () {\n            this.$router.replace({\n                path: \"/plus/shopx/order/orderList\",\n                query: {}\n            });\n        },\n        //支付方式\n        currencyWay: function (index) {\n\n            if(this.support.indexOf(index) === -1){\n                Toast('目前不支持此支付方式');\n                return\n            }\n            if (index == 1) {\n                this.icon = 1;\n                this.unit = \"ETH\";\n            }\n            if (index == 2) {\n                this.icon = 2;\n                this.unit = \"INE\";\n            }\n            if (index == 3) {\n                this.icon = 3;\n                this.unit = \"UTD\";\n            }\n            //更改支付方式\n            this.request({\n                url: 'api/store/order',\n                method: 'PUT',\n                data: {\n                    id: this.orderID,\n                    pay_type: index\n                },\n                success: (response) => {\n                    this.orderAmount = response;\n                    this.show = true;\n                    if (Number(this.orderAmount.balance) >= Number(this.orderAmount.amount)) {\n                        this.isActivw = true;\n                    } else {\n                        this.isActivw = false;\n                    }\n                },\n                error: (response) => {\n\n                },\n                complete: () => {\n\n                }\n            });\n            this.icon = index;\n            this.switcha=true;\n        },\n        //支付\n        defray: function () {\n            this.request({\n                url: 'api/store/order',\n                method: 'PATCH',\n                data: {\n                    id: this.orderID,\n                    pay_type: this.icon,\n\n                },\n                success: (response) => {\n                    this.$router.push({\n                        path: '/plus/shopx/order/success',\n                        query: {\n                            id: this.orderID\n                        }\n                    })\n                },\n                error: (response) => {\n                },\n                complete: () => {\n\n                }\n            });\n        },\n        takeSkip: function () {\n            this.$router.push({\n                path: \"/plus/shopx/address\",\n                query: {\n                    fromOrder: true,\n                    order: this.$route.query.order\n                }\n            })\n        },\n        // 初始化用户地址信息\n        handleGetUserAddress: function() {\n            this.information();\n            this.request({\n                url: 'api/store/address',\n                method: 'GET',\n                data: { },\n                success: (response) => {\n                    this.transferRecord = response;\n                    this.isDefaultAddress = false;\n\n                    this.transferRecord.list.map((data) => {\n                        if(this.transferRecord.default_id == data.id) {\n                            this.isDefaultAddress = true;\n                            this.order.address = data;\n                        }\n                    })\n                },\n                error: (response) => {\n\n                },\n                complete: (response) => {\n                }\n            });\n        },\n        /*\n        获取验证码链接\n        handleGetCode: function () {\n            this.request({\n                url: 'api/sendMobileCode',\n                data: {\n                    mobile: 15013663961\n                },\n                success: (response) => {\n                    this.isCode = !this.isCode;\n\n                    let timer = setInterval(() => {\n                        if(this.codeTime > 0) {\n                            this.codeTime = this.codeTime - 1;\n                        } else {\n                            this.codeTime = 60;\n                            this.isCode = !this.isCode;\n\n                            clearInterval(timer)\n                        }\n                    }, 1000)\n                },\n                error: (response) => {\n                },\n                complete: () => {\n\n                }\n            });\n        },*/\n        changingOver: function () {\n            this.switcha = false\n        },\n        changingTwo: function () {\n            this.switcha = true\n        }\n    }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"index.vue","sourceRoot":"src/view/plus/shopx/order","sourcesContent":["<template>\n    <div class=\"order\">\n        <van-popup\n                v-model=\"show\"\n                round\n                position=\"bottom\"\n                :style=\"{ height: '470px' }\"\n                @click-overlay=\"cancel\"\n        >\n            <!--支付提交-->\n            <div v-if=\"switcha\">\n                <div class=\"defrayal-three\">\n                    <div class=\"defrayal\">\n                        <p>确认支付</p>\n                        <van-icon name=\"cross\" @click=\"cancel\" size=\"23px\" color=\"rgba(181, 181, 181, 1)\"/>\n                    </div>\n                </div>\n                <div class=\"amountOfPayment \">\n                    <countTo :startVal='0' :decimals=\"2\" :endVal='Number(orderAmount.amount)' :duration='1'></countTo>\n                    {{unit}}\n                </div>\n                <div class=\"defrayal-one\">\n                    <div class=\"identifier\">\n                        <p>订单金额</p>\n                        <p>￥\n                            <countTo :startVal='0' :decimals=\"2\" :endVal='Number(orderAmount.pay_price)'\n                                     :duration='1'></countTo>\n                        </p>\n                    </div>\n                </div>\n                <div class=\"defrayal-one\">\n                    <div class=\"identifier\" ><!-- @click=\"changingOver\"  <van-icon name=\"arrow\" size=\"18px\" color=\"rgba(181, 181, 181, 1)\"/>  -->\n                        <p>支付方式</p>\n                        <p class=\"payment-way\" >{{unit}}支付\n\n                        </p>\n                    </div>\n                </div>\n                <div class=\"defrayal-two defrayal-one\">\n                    <div class=\"payoff\">\n                        <p>可用余额</p>\n                        <p>\n                            <countTo :startVal='0' :decimals=\"2\" :endVal='Number(orderAmount.balance)'\n                                     :duration='1'></countTo>\n                            {{unit}}\n                        </p>\n                    </div>\n                </div>\n                <!--\n                <div class=\"identifying\" >\n                    <input type=\"text\" placeholder=\"请输入验证码\" v-model=\"code\" @input=\"handleGetStatus\" @focus=\"handleInputBlurBack\" />\n                    <p @click=\"handleGetCode\" v-if=\"!isCode\">获取验证码</p>\n                    <p class=\"identifying-right\" v-else>{{codeTime}}S</p>\n                </div>\n                -->\n                <div v-if=\"isActivw\" class=\"affirm-active\" @click=\"defray\">确认支付</div>\n                <div v-else class=\"affirm\">余额不足</div>\n            </div>\n            <!--支付方式选择-->\n            <div v-else=\"switcha\">\n                <div class=\"mode-of-payment \">\n                    <van-icon name=\"arrow-left\" size=\"17px\" color=\"rgba(181, 181, 181, 1)\" @click=\"changingTwo\"/>\n                    <p>选择付款方式</p>\n                </div>\n                <div class=\"currency\" @click=\"currencyWay('3')\">\n                    <img src=\"../../image/utd_currency_01.png\"/>\n                    <div class=\"currencyText\">\n                        <p>UTD支付</p>\n                        <van-icon name=\"success\" size=\"20px\" color=\"rgba(255, 48, 19, 1)\" v-if=\"icon==3\"/>\n                    </div>\n                </div>\n                <div class=\"currency\" @click=\"currencyWay('2')\">\n                    <img src=\"../../image/ine_currency_03.png\"/>\n                    <div class=\"currencyText\">\n                        <p>INE支付</p>\n                        <van-icon name=\"success\" size=\"20px\" color=\"rgba(255, 48, 19, 1)\" v-if=\"icon==2\"/>\n                    </div>\n                </div>\n                <div class=\"currency\" @click=\"currencyWay('1')\">\n                    <img src=\"../../image/eth_currency_02.png\"/>\n                    <div class=\"currencyText\">\n                        <p>ETH支付</p>\n                        <van-icon name=\"success\" size=\"20px\" color=\"rgba(255, 48, 19, 1)\" v-if=\"icon==1\"/>\n                    </div>\n                </div>\n            </div>\n        </van-popup>\n\n        <navBar title=\"确认订单\" class=\"orderBottom\"/>\n\n        <div class=\"receiving\" @click=\"takeSkip\" v-if=\"!isDefaultAddress\">\n            <p>新增收货地址</p>\n            <van-icon name=\"arrow\" color=\"rgba(51, 51, 51, 0.5)\"/>\n        </div>\n        <div class=\"address\" v-else @click=\"takeSkip\">\n            <div class=\"address-left\">\n                <van-icon size=\"20\" name=\"location-o\"/>\n            </div>\n            <div class=\"address-center\" v-if=\"order.address\">\n                <p>\n                    {{order.address.name}} <span>{{order.address.phone}}</span>\n                </p>\n                <p>地址：{{order.address.region.city}} {{order.address.region.province}} {{order.address.region.region}} {{order.address.detail}}</p>\n            </div>\n            <div class=\"address-right\">\n                <i class=\"van-icon van-icon-arrow\" style=\"color: #333333; font-size: 18px;\"><!----></i>\n            </div>\n        </div>\n        <div class=\"information\" v-if=\"order.goods_list\">\n            <img :src=\"order.goods_list[0].image\"/>\n            <div class=\"invitation-text\">\n                <p>{{order.goods_list[0].name}}</p>\n                <div class=\"price\">\n                    <p>￥{{order.order_pay_price}} </p>\n                    <p>X {{order.order_total_quantity}}</p>\n                </div>\n            </div>\n        </div>\n        <div class=\"expenses\">\n            <p>商品总额</p>\n            <p>￥ {{order.order_total_price}}</p>\n        </div>\n        <div class=\"expenses\">\n            <p>配送费用</p>\n            <p>￥ {{express_price}}</p>\n        </div>\n        <div class=\"message\">\n            <input type=\"text\" v-model=\"comments\" placeholder=\"选填: 买家留言(50字以内) \"/>\n        </div>\n        <div class=\"bottom\">\n            <p>合计: <span>￥{{Number(order.order_total_price) + Number(express_price) }} </span></p>\n            <div class=\"button\" @click=\"showPopup\">提交订单</div>\n        </div>\n    </div>\n</template>\n<style src=\"./index.css\" scoped></style>\n<script>\n    import mixins from '../../../../common/mixin';\n    import navBar from '../../../../component/navBar';\n    import {Icon, Dialog, Popup,Toast } from 'vant';\n    import countTo from 'vue-count-to';\n\n    export default {\n        components: {\n            navBar,\n            Icon,\n            Dialog,\n            Popup,\n            countTo,\n            Toast\n        },\n        mixins: [mixins],\n        data: () => ({\n            show: false,\t\t// 是否激活支付按钮\n            code: \"\",\n            codeTime: 60,       // 手机倒计时\n            isCode: false,     // 是否显示发生验证码\n            switcha: true,\n            order: {},   //订单信息\n            comments: \"\",  //买家留言\n            orderAmount: {},   //订单支付信息\n            isActivw: false,     //支付按钮\n            orderID: \"\",         //订单ID\n            isDefaultAddress: false,       //判断是否有默认地址\n            icon: 3,   //支付方式  1等于ETH 2等于INE 3等于UTD\n            unit: \"UTD\",      //单位\n            transferRecord: {},             // 用户地址信息\n            support:[],                  //支持的付款方式\n            express_price:0             //运费\n        }),\n        // 设置路由钩子，存储页面来源\n        beforeRouteEnter(to, from, next) {\n            next(vm => {          //  这里的vm指的就是vue实例，可以用来当做this使用\n                sessionStorage.setItem('url_from', from.path);\n            })\n        },\n        created() {\n\n        },\n        mounted() {\n            this.order = JSON.parse(this.$route.query.order);\n            console.log(JSON.parse(this.$route.query.order));\n            this.handleGetUserAddress();\n\n        },\n        methods: {\n          //商品信息\n            information:function () {\n                this.request({\n                    url: 'api/store/order',\n                    method: 'GET',\n                    data: {\n                        id: this.order.id,\n                        quantity: this.order.order_total_quantity,\n                        sku_id: this.order.sku_id,\n                        remark: ''\n                    },\n                    success: (response) => {\n                        this.express_price = response.express_price\n                      console.log(response)\n                    },\n                    error: (response) => {\n                    },\n                    complete: () => {\n\n                    }\n                });\n            },\n            //提交订单\n            showPopup: function () {\n                this.request({\n                    url: 'api/store/order',\n                    method: 'POST',\n                    data: {\n                        id: this.order.id,\n                        quantity: this.order.order_total_quantity,\n                        sku_id: this.order.sku_id,\n                        remark: this.comments,\n                    },\n                    success: (response) => {\n                        this.orderID = response.id;\n                        //获取订单支持币种默认选择第一个\n                        this.request({\n                            url: 'api/store/goods',\n                            method: 'POST',\n                            data: {\n                                id: this.order.id,\n                            },\n                            success: (response) => {\n                                this.support =response.detail.available_pay_type;\n                                if (response.detail.available_pay_type[0] == 1) {\n                                    this.icon = 1;\n                                    this.unit = \"ETH\";\n                                }\n                                if (response.detail.available_pay_type[0] == 2) {\n                                    this.icon = 2;\n                                    this.unit = \"INE\";\n                                }\n                                if (response.detail.available_pay_type[0] == 3) {\n                                    this.icon = 3;\n                                    this.unit = \"UTD\";\n                                }\n                                //支付信息前置获取\n                                this.request({\n                                    url: 'api/store/order',\n                                    method: 'PUT',\n                                    data: {\n                                        id: this.orderID,\n                                        pay_type: response.detail.available_pay_type[0]\n                                    },\n                                    success: (response) => {\n                                        this.orderAmount = response;\n                                        this.show = true;\n                                        if (Number(this.orderAmount.balance) >= Number(this.orderAmount.amount)) {\n                                            this.isActivw = true;\n                                        } else {\n                                            this.isActivw = false;\n                                        }\n                                    },\n                                    error: (response) => {\n                                    },\n                                    complete: () => {\n                                    }\n                                });\n                            },\n                            error: (response) => {\n                            },\n                            complete: () => {\n                            }\n                        });\n\n                    },\n                    error: (response) => {\n                    },\n                    complete: () => {\n                    }\n                });\n            },\n            cancel: function () {\n                this.$router.replace({\n                    path: \"/plus/shopx/order/orderList\",\n                    query: {}\n                });\n            },\n            //支付方式\n            currencyWay: function (index) {\n\n                if(this.support.indexOf(index) === -1){\n                    Toast('目前不支持此支付方式');\n                    return\n                }\n                if (index == 1) {\n                    this.icon = 1;\n                    this.unit = \"ETH\";\n                }\n                if (index == 2) {\n                    this.icon = 2;\n                    this.unit = \"INE\";\n                }\n                if (index == 3) {\n                    this.icon = 3;\n                    this.unit = \"UTD\";\n                }\n                //更改支付方式\n                this.request({\n                    url: 'api/store/order',\n                    method: 'PUT',\n                    data: {\n                        id: this.orderID,\n                        pay_type: index\n                    },\n                    success: (response) => {\n                        this.orderAmount = response;\n                        this.show = true;\n                        if (Number(this.orderAmount.balance) >= Number(this.orderAmount.amount)) {\n                            this.isActivw = true;\n                        } else {\n                            this.isActivw = false;\n                        }\n                    },\n                    error: (response) => {\n\n                    },\n                    complete: () => {\n\n                    }\n                });\n                this.icon = index;\n                this.switcha=true;\n            },\n            //支付\n            defray: function () {\n                this.request({\n                    url: 'api/store/order',\n                    method: 'PATCH',\n                    data: {\n                        id: this.orderID,\n                        pay_type: this.icon,\n\n                    },\n                    success: (response) => {\n                        this.$router.push({\n                            path: '/plus/shopx/order/success',\n                            query: {\n                                id: this.orderID\n                            }\n                        })\n                    },\n                    error: (response) => {\n                    },\n                    complete: () => {\n\n                    }\n                });\n            },\n            takeSkip: function () {\n                this.$router.push({\n                    path: \"/plus/shopx/address\",\n                    query: {\n                        fromOrder: true,\n                        order: this.$route.query.order\n                    }\n                })\n            },\n            // 初始化用户地址信息\n            handleGetUserAddress: function() {\n                this.information();\n                this.request({\n                    url: 'api/store/address',\n                    method: 'GET',\n                    data: { },\n                    success: (response) => {\n                        this.transferRecord = response;\n                        this.isDefaultAddress = false;\n\n                        this.transferRecord.list.map((data) => {\n                            if(this.transferRecord.default_id == data.id) {\n                                this.isDefaultAddress = true;\n                                this.order.address = data;\n                            }\n                        })\n                    },\n                    error: (response) => {\n\n                    },\n                    complete: (response) => {\n                    }\n                });\n            },\n            /*\n            获取验证码链接\n            handleGetCode: function () {\n                this.request({\n                    url: 'api/sendMobileCode',\n                    data: {\n                        mobile: 15013663961\n                    },\n                    success: (response) => {\n                        this.isCode = !this.isCode;\n\n                        let timer = setInterval(() => {\n                            if(this.codeTime > 0) {\n                                this.codeTime = this.codeTime - 1;\n                            } else {\n                                this.codeTime = 60;\n                                this.isCode = !this.isCode;\n\n                                clearInterval(timer)\n                            }\n                        }, 1000)\n                    },\n                    error: (response) => {\n                    },\n                    complete: () => {\n\n                    }\n                });\n            },*/\n            changingOver: function () {\n                this.switcha = false\n            },\n            changingTwo: function () {\n                this.switcha = true\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n"]}]}