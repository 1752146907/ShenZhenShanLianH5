{"remainingRequest":"/Users/lirongzhi/Documents/深圳善链/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lirongzhi/Documents/深圳善链/src/view/plus/shopx/address/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lirongzhi/Documents/深圳善链/src/view/plus/shopx/address/index.vue","mtime":1572538946840},{"path":"/Users/lirongzhi/Documents/深圳善链/node_modules/cache-loader/dist/cjs.js","mtime":1572539003414},{"path":"/Users/lirongzhi/Documents/深圳善链/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Toast, Dialog, Tag, Icon } from 'vant';\nimport mixins from '../../../../common/mixin';\nimport navBar from  '../../../../component/navBar'\nexport default {\n    components: {\n       Toast,\n       Dialog,\n       navBar,\n       Tag,\n       Icon\n    },\n    mixins: [mixins],\n\n    data: () => ({\n       isDelete: false,\n       deleteList: [],\n       addressList: [],\n       transferRecord: {},     // 请求回来的数据\n       fromOrder: false,       // 是否来自订单页面\n     }),\n    // 设置路由钩子，存储页面来源\n    beforeRouteEnter(to, from, next) {\n        next(vm=>{          //  这里的vm指的就是vue实例，可以用来当做this使用\n            sessionStorage.setItem('url_from', from.path);\n        })\n    },\n    created () {\n        this.handleGetUserAddress();\n    },\n    mounted() {\n       this.fromOrder = this.$route.query.fromOrder;\n    },\n    methods: {\n       //刪除地址\n       handleDeleteAddress: function() {\n          this.request({\n             url: \"api/store/address\",\n             method: \"PUT\",\n             data: {id:this.deleteList},\n             success: (response) => {\n                this.$toast.center(\"删除成功\");\n                this.deleteList = [];\n                this.handleGetUserAddress();\n                this.isDelete = false;\n             },\n             error: (response) => {},\n             complete: (response) => {}\n          })\n       },\n       //新增地址\n       handleAddAddress: function() {\n          this.$router.push({\n             path: '/plus/shopx/addressAdd',\n             query: {\n\n             }\n          });\n       },\n       //编辑地址\n       handleEditAddress: function(option) {\n          if (this.transferRecord.default_id == option.id){\n             option.is_default = true;\n          }\n          this.$router.push({\n             path: '/plus/shopx/addressAdd',\n             query: {\n                title: '编辑地址',\n                address: option,\n             }\n          });\n       },\n       // 点击地址列表\n       handleClickAddress: function(option) {\n          // 是否删除地址\n          if(this.isDelete){\n             let i = this.deleteList.indexOf(option.id);\n             if(i === -1){\n                this.deleteList.push(option.id);\n             }else {\n                this.deleteList.splice(i,1);\n             }\n          }\n          // 是否从订单进来\n          else if(this.fromOrder){\n             //选中的地址修改为默认地址\n             this.request({\n                url: 'api/store/address',\n                method: 'POST',\n                data: {\n                   \"id\": option.id,\n                   \"is_default\": 1\n                },\n                success: (response) => {\n                   let orderInfo = { \n                      id: JSON.parse(this.$route.query.order).id,\n                      sku_id: JSON.parse(this.$route.query.order).sku_id,\n                      in_delivery_rule: JSON.parse(this.$route.query.order).in_delivery_rule,\n                      order_pay_price: JSON.parse(this.$route.query.order).order_pay_price,\n                      express_price: JSON.parse(this.$route.query.order).express_price,\n                      order_total_price: JSON.parse(this.$route.query.order).order_total_price,\n                      order_total_quantity: JSON.parse(this.$route.query.order).order_total_quantity,\n                      goods_list: [{\n                         image: JSON.parse(this.$route.query.order).goods_list[0] ? JSON.parse(this.$route.query.order).goods_list[0].image : '',\n                         name: JSON.parse(this.$route.query.order).goods_list[0].name\n                      }]\n                   };\n                   this.$router.replace({\n                      path: \"/plus/shopx/order/order\",\n                      query: {\n                         fromOrder: true,\n                         order: JSON.stringify(orderInfo)\n                      }\n                   })\n                },\n                error: (response) => {\n\n                },\n                complete: (response) => {\n                }\n             });\n\n          }\n       },\n       // 返回地址首页\n       handleIsDelete: function() {\n          this.isDelete = false;\n          this.deleteList = []\n       },\n        // 初始化用户地址信息\n        handleGetUserAddress: function() {\n            this.request({\n                url: 'api/store/address',\n                method: 'GET',\n                data: { },\n                success: (response) => {\n                   this.transferRecord = response;\n                   this.addressList = response.list;\n                },\n                error: (response) => {\n\n                },\n                complete: (response) => {\n                }\n            });\n        }\n    }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"index.vue","sourceRoot":"src/view/plus/shopx/address","sourcesContent":["<template>\n   <div class=\"address\">\n      <div class=\"address-head\">\n         <navBar v-if=\"!isDelete\" title=\"地址管理\"></navBar>\n         <div v-else class=\"bar\">\n            <div class=\"bar-box\">\n               <van-icon class=\"bar-back\" @click=\"handleIsDelete\" name=\"arrow-left\" size=\"20\" />\n               删除地址\n            </div>\n         </div>\n         <div class=\"delete\" v-if=\"!isDelete && addressList.length > 0\" @click=\"isDelete = true\">删除</div>\n      </div>\n      <div class=\"address-list\">\n         <div v-if=\"addressList.length == 0\" class=\"no-data\" style=\"padding-top: 80px;position: fixed;top: 44px;width: 100%\">\n            <img src=\"./image/error.png\" class=\"no-data-image-icon\" alt=\"\">\n            <p class=\"no-data-text\">暂无记录</p>\n         </div>\n         <div class=\"address-list-item\" v-for=\"(item,index) in addressList\">\n            <div v-if=\"isDelete\" class=\"checkBox\" @click=\"handleClickAddress(item)\">\n               <div class=\"checkBox-unchecked\" v-if=\"deleteList.indexOf(item.id) == -1\"></div>\n               <div class=\"checkBox-checked\" v-if=\"deleteList.indexOf(item.id) != -1\">\n                  <i class=\"van-icon van-icon-success\" style=\"color: rgb(51, 51, 51); font-size: 12px;\"><!----></i>\n               </div>\n            </div>\n            <div class=\"list-item\">\n               <div class=\"item-name-phone\" @click=\"handleClickAddress(item)\">\n                  <div class=\"item-name\">{{item.name}}</div>\n                  <div class=\"item-phone\">{{item.phone}}</div>\n                  <div class=\"item-default\" v-if=\"item.id == transferRecord.default_id\">默认</div>\n               </div>\n               <div class=\"item-address-edit\">\n                  <div class=\"item-address\" @click=\"handleClickAddress(item)\">\n                     {{item.region.province + item.region.city + item.region.region + \" \" + item.detail}}\n                  </div>\n                  <div class=\"edit-icon\" v-if=\"!isDelete\" @click=\"handleEditAddress(item)\">\n                     <img src=\"./image/edit_icon.png\" alt=\"\">\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div style=\"width: 100px;height: 49px\"></div>\n      </div>\n      <div class=\"address-btn\">\n         <div v-if=\"isDelete && deleteList.length > 0\" class=\"delete-btn\" @click=\"handleDeleteAddress\">完成</div>\n         <div v-else-if=\"isDelete && deleteList.length == 0\" class=\"delete-btn\" @click=\"isDelete = false;\">取消</div>\n         <div v-else class=\"add-btn\" @click=\"handleAddAddress\">新增地址</div>\n      </div>\n   </div>\n</template>\n<style src=\"./index.css\" scoped></style>\n<script>\n    import { Toast, Dialog, Tag, Icon } from 'vant';\n    import mixins from '../../../../common/mixin';\n    import navBar from  '../../../../component/navBar'\n    export default {\n        components: {\n           Toast,\n           Dialog,\n           navBar,\n           Tag,\n           Icon\n        },\n        mixins: [mixins],\n\n        data: () => ({\n           isDelete: false,\n           deleteList: [],\n           addressList: [],\n           transferRecord: {},     // 请求回来的数据\n           fromOrder: false,       // 是否来自订单页面\n         }),\n        // 设置路由钩子，存储页面来源\n        beforeRouteEnter(to, from, next) {\n            next(vm=>{          //  这里的vm指的就是vue实例，可以用来当做this使用\n                sessionStorage.setItem('url_from', from.path);\n            })\n        },\n        created () {\n            this.handleGetUserAddress();\n        },\n        mounted() {\n           this.fromOrder = this.$route.query.fromOrder;\n        },\n        methods: {\n           //刪除地址\n           handleDeleteAddress: function() {\n              this.request({\n                 url: \"api/store/address\",\n                 method: \"PUT\",\n                 data: {id:this.deleteList},\n                 success: (response) => {\n                    this.$toast.center(\"删除成功\");\n                    this.deleteList = [];\n                    this.handleGetUserAddress();\n                    this.isDelete = false;\n                 },\n                 error: (response) => {},\n                 complete: (response) => {}\n              })\n           },\n           //新增地址\n           handleAddAddress: function() {\n              this.$router.push({\n                 path: '/plus/shopx/addressAdd',\n                 query: {\n\n                 }\n              });\n           },\n           //编辑地址\n           handleEditAddress: function(option) {\n              if (this.transferRecord.default_id == option.id){\n                 option.is_default = true;\n              }\n              this.$router.push({\n                 path: '/plus/shopx/addressAdd',\n                 query: {\n                    title: '编辑地址',\n                    address: option,\n                 }\n              });\n           },\n           // 点击地址列表\n           handleClickAddress: function(option) {\n              // 是否删除地址\n              if(this.isDelete){\n                 let i = this.deleteList.indexOf(option.id);\n                 if(i === -1){\n                    this.deleteList.push(option.id);\n                 }else {\n                    this.deleteList.splice(i,1);\n                 }\n              }\n              // 是否从订单进来\n              else if(this.fromOrder){\n                 //选中的地址修改为默认地址\n                 this.request({\n                    url: 'api/store/address',\n                    method: 'POST',\n                    data: {\n                       \"id\": option.id,\n                       \"is_default\": 1\n                    },\n                    success: (response) => {\n                       let orderInfo = { \n                          id: JSON.parse(this.$route.query.order).id,\n                          sku_id: JSON.parse(this.$route.query.order).sku_id,\n                          in_delivery_rule: JSON.parse(this.$route.query.order).in_delivery_rule,\n                          order_pay_price: JSON.parse(this.$route.query.order).order_pay_price,\n                          express_price: JSON.parse(this.$route.query.order).express_price,\n                          order_total_price: JSON.parse(this.$route.query.order).order_total_price,\n                          order_total_quantity: JSON.parse(this.$route.query.order).order_total_quantity,\n                          goods_list: [{\n                             image: JSON.parse(this.$route.query.order).goods_list[0] ? JSON.parse(this.$route.query.order).goods_list[0].image : '',\n                             name: JSON.parse(this.$route.query.order).goods_list[0].name\n                          }]\n                       };\n                       this.$router.replace({\n                          path: \"/plus/shopx/order/order\",\n                          query: {\n                             fromOrder: true,\n                             order: JSON.stringify(orderInfo)\n                          }\n                       })\n                    },\n                    error: (response) => {\n\n                    },\n                    complete: (response) => {\n                    }\n                 });\n\n              }\n           },\n           // 返回地址首页\n           handleIsDelete: function() {\n              this.isDelete = false;\n              this.deleteList = []\n           },\n            // 初始化用户地址信息\n            handleGetUserAddress: function() {\n                this.request({\n                    url: 'api/store/address',\n                    method: 'GET',\n                    data: { },\n                    success: (response) => {\n                       this.transferRecord = response;\n                       this.addressList = response.list;\n                    },\n                    error: (response) => {\n\n                    },\n                    complete: (response) => {\n                    }\n                });\n            }\n        }\n    }\n</script>\n\n"]}]}