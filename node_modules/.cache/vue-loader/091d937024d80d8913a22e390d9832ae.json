{"remainingRequest":"/Users/lirongzhi/Documents/深圳善链/h5/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lirongzhi/Documents/深圳善链/h5/src/view/wallet/recharge/detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lirongzhi/Documents/深圳善链/h5/src/view/wallet/recharge/detail.vue","mtime":1572538946856},{"path":"/Users/lirongzhi/Documents/深圳善链/h5/node_modules/cache-loader/dist/cjs.js","mtime":1572539003414},{"path":"/Users/lirongzhi/Documents/深圳善链/h5/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport mixins from '../../../common/mixin';\nimport navBar from '../../../component/navBar';\nimport countTo from 'vue-count-to';\n\nexport default {\n    components: {\n        navBar,\n        countTo\n    },\n    mixins: [mixins],\n    data: () => ({\n        recharge: {}\n    }),\n    created () {\n\n    },\n    mounted () {\n        this.handleLoad();\n    },\n    // 设置路由钩子，存储页面来源\n    beforeRouteEnter(to, from, next) {\n        next(vm=>{          //  这里的vm指的就是vue实例，可以用来当做this使用\n            sessionStorage.setItem('url_from', from.path);\n        })\n    },\n    methods: {\n        handleLoad: function() {\n            this.request({\n                url: 'api/recharge',\n                method: 'PUT',\n                data: {\n                    id: this.$route.query.id\n                },\n                success: (response) => {\n                    this.recharge = response;\n                },\n                error: (response) => {\n\n                },\n                complete: (response) => {\n\n                }\n            });\n        }\n    }\n}\n",{"version":3,"sources":["detail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"detail.vue","sourceRoot":"src/view/wallet/recharge","sourcesContent":["<template>\n    <div class=\"record\">\n        <navBar title=\"详情\"></navBar>\n        <div>\n            <div class=\"price\">\n                <div class=\"price-title\">金额</div>\n                <div class=\"price-body\">\n                    <!--<div class=\"price-body-number on\">+{{recharge.amount}}</div>-->\n                    <div class=\"price-body-number\">\n                        +<countTo :startVal='0' :decimals=\"2\" :endVal='Number(recharge.amount ? recharge.amount : 0)' :duration='1'></countTo>\n                    </div>\n                    <div class=\"price-body-type\" v-if=\"recharge.currency\">{{recharge.currency.short}}</div>\n                </div>\n            </div>\n            <div class=\"record-body\">\n                <div class=\"record-item\">\n                    <div class=\"record-item-title\">交易号</div>\n                    <div class=\"record-item-detailed\">{{recharge.deal_code}}</div>\n                </div>\n                <div class=\"record-item\">\n                    <div class=\"record-item-title\">类型</div>\n                    <div class=\"record-item-detailed\" v-if=\"recharge.type == 1\">充币</div>\n                    <div class=\"record-item-detailed\" v-if=\"recharge.type == 2\">提币</div>\n                    <div class=\"record-item-detailed\" v-if=\"recharge.type == 3\">划转</div>\n                    <div class=\"record-item-detailed\" v-if=\"recharge.type == 4\">空投</div>\n                </div>\n                <!--                <div class=\"record-item\">\n                                    <div class=\"record-item-title\">划转地址</div>\n                                    <div class=\"record-item-detailed\">{{recharge.address_to}}</div>\n                                </div>-->\n                <div class=\"record-item\">\n                    <div class=\"record-item-title\">状态</div>\n                    <div class=\"record-item-detailed\" v-if=\"recharge.handle_status  \">{{recharge.handle_status.text}}</div>\n                </div>\n                <div class=\"record-item\">\n                    <div class=\"record-item-title\">时间</div>\n                    <div class=\"record-item-detailed\">{{recharge.updated_at}}</div>\n                </div>\n                <div class=\"record-item\">\n                    <div class=\"record-item-title\">备注</div>\n                    <div class=\"record-item-detailed\">{{recharge.remark ? recharge.remark : '暂无'}}</div>\n                </div>\n                <div class=\"record-item\" v-if=\"recharge.handle_code\">\n                    <div class=\"record-item-title\">交易哈希</div>\n                    <div class=\"record-item-detailed\">{{recharge.handle_code}}</div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style src=\"./detail.css\" scoped></style>\n\n<script>\n    import mixins from '../../../common/mixin';\n    import navBar from '../../../component/navBar';\n    import countTo from 'vue-count-to';\n\n    export default {\n        components: {\n            navBar,\n            countTo\n        },\n        mixins: [mixins],\n        data: () => ({\n            recharge: {}\n        }),\n        created () {\n\n        },\n        mounted () {\n            this.handleLoad();\n        },\n        // 设置路由钩子，存储页面来源\n        beforeRouteEnter(to, from, next) {\n            next(vm=>{          //  这里的vm指的就是vue实例，可以用来当做this使用\n                sessionStorage.setItem('url_from', from.path);\n            })\n        },\n        methods: {\n            handleLoad: function() {\n                this.request({\n                    url: 'api/recharge',\n                    method: 'PUT',\n                    data: {\n                        id: this.$route.query.id\n                    },\n                    success: (response) => {\n                        this.recharge = response;\n                    },\n                    error: (response) => {\n\n                    },\n                    complete: (response) => {\n\n                    }\n                });\n            }\n        }\n    }\n</script>\n"]}]}