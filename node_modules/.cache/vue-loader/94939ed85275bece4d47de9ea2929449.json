{"remainingRequest":"/Users/lirongzhi/Documents/深圳善链/h5/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lirongzhi/Documents/深圳善链/h5/src/view/login/code.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lirongzhi/Documents/深圳善链/h5/src/view/login/code.vue","mtime":1572538946793},{"path":"/Users/lirongzhi/Documents/深圳善链/h5/node_modules/cache-loader/dist/cjs.js","mtime":1572539003414},{"path":"/Users/lirongzhi/Documents/深圳善链/h5/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {Toast} from 'vant';\nimport navBar from '../../component/navBarTwo';\nimport mixins from '../../common/mixin';\nimport Geet from \"./Geet.vue\";\n\nexport default {\n    components: {\n        navBar,\n        Toast,\n        Geet\n    },\n    mixins: [mixins],\n    data: () => ({\n        inviter: 0,\n        isCode: false,         // 是否显示发生验证码\n        codeTime: 60,          // 手机倒计时\n        mobile: '',            // 手机\n        code: '',              // 验证码\n        showCodeDialog: false   // 极速校验\n    }),\n    created() {\n        this.mobile = this.$route.query.mobile;\n        // register         新用户\n        // forget           忘记密码\n        // password         密码登录\n        if(this.$route.query.inviter){\n            this.inviter = this.$route.query.inviter\n        }\n    },\n    mounted() {\n        // 自动调起滑动验证\n        const toast = Toast.loading({\n            mask: true,\n            duration: 0,\n            message: '加载中...'\n        });\n        setTimeout(() => {\n            this.handleSlideVerify();\n            toast.clear()\n        }, 1500)\n    },\n    methods: {\n        GeetChange(val) {   // 极验图片加载之后，通过更改控制变量实现可以再次加载\n            this.showCodeDialog = val;\n        },\n        GeetPath(val) {     // 接受到图形验证参数，将参数发往服务端进行验证\n            this.handleGetCode();\n            this.showCodeDialog = false;\n        },\n        // 发送验证码\n        handleGetCode: function () {\n            this.request({\n                url: 'api/sendMobileCode',\n                data: {\n                    mobile: this.mobile.replace(/[ ]/g,\"\")\n                },\n                success: (response) => {\n                    this.isCode = !this.isCode;\n\n                    let timer = setInterval(() => {\n                        if(this.codeTime > 0) {\n                            this.codeTime = this.codeTime - 1;\n                        } else {\n                            this.codeTime = 60;\n                            this.isCode = !this.isCode;\n\n                            clearInterval(timer)\n                        }\n                    }, 1000);\n                },\n                error: (response) => {\n                },\n                complete: () => {\n\n                }\n            });\n        },\n        // 图形验证码\n        handleSlideVerify: function () {\n            this.showCodeDialog = !this.showCodeDialog;\n            window.scrollTo(0, 0);\n        },\n        // 登录操作\n        handleLogin: function () {\n            if(this.$route.query.type == 'register') {\n                // 新用户 设置密码\n                this.request({\n                    url: 'api/login',\n                    data: {\n                        mobile: this.mobile.replace(/[ ]/g,\"\"),\n                        code: this.code,\n                        inviter: this.inviter\n                    },\n                    success: (response) => {\n                        this.$router.push({\n                            path: '/setPassword',\n                            query: {\n                                collBack: this.$route.query.collBack ? this.$route.query.collBack : '/'\n                            }\n                        });\n\n                        // 存储access_token\n                        let access_token = response.token_type + ' ' + response.access_token;\n                        this.$storage.setToken(access_token);\n\n                        // 存储过期时间戳\n                        let d = new Date();\n                        let times = d.getTime() + response.expires_in\n                        this.$storage.setTimeStamp(times);\n                    },\n                    error: (response) => {\n                        // 钱包生成失败 重新登录\n                        if(response.status_code == 488) {\n                            this.request({\n                                url: 'api/login',\n                                data: {\n                                    mobile: this.mobile.replace(/[ ]/g,\"\"),\n                                    code: this.code,\n                                    inviter: this.inviter\n                                },\n                                success: (response) => {\n                                    this.$router.push({\n                                        path: '/setPassword',\n                                        query: {\n                                            collBack: this.$route.query.collBack ? this.$route.query.collBack : '/'\n                                        }\n                                    });\n\n                                    // 存储access_token\n                                    let access_token = response.token_type + ' ' + response.access_token;\n                                    this.$storage.setToken(access_token);\n\n                                    // 存储过期时间戳\n                                    let d = new Date();\n                                    let times = d.getTime() + response.expires_in\n                                    this.$storage.setTimeStamp(times);\n                                },\n                                error: (response) => {\n\n                                },\n                                complete: (response) => {\n\n                                }\n                            })\n                        }\n                    },\n                    complete: (response) => {\n                        this.showCodeDialog = false\n                    }\n                });\n                return false;\n            }\n            if(this.$route.query.type == 'forget') {\n                // 重置密码\n                this.request({\n                    url: 'api/login',\n                    data: {\n                        mobile: this.mobile.replace(/[ ]/g,\"\"),\n                        code: this.code,\n                        inviter: this.inviter\n                    },\n                    success: (response) => {\n                        // 存储access_token\n                        let access_token = response.token_type + ' ' + response.access_token;\n                        this.$storage.setToken(access_token);\n\n                        // 存储过期时间戳\n                        let d = new Date();\n                        let times = d.getTime() + response.expires_in\n                        this.$storage.setTimeStamp(times);\n\n                        this.$router.push({\n                            path: '/forgetPassword',\n                            title: '重置密码',\n                            query: {\n                                code: this.code,\n                                collBack: this.$route.query.collBack ? this.$route.query.collBack : '/'\n                            }\n                        });\n                    },\n                    error: (response) => {\n\n                    },\n                    complete: (response) => {\n                        this.showCodeDialog = false\n                    }\n                });\n                return false;\n            }\n            if(this.$route.query.type == 'password') {\n                // 密码登录\n                this.request({\n                    url: 'api/login',\n                    data: {\n                        mobile: this.mobile.replace(/[ ]/g,\"\"),\n                        code: this.code,\n                        inviter: this.inviter\n                    },\n                    success: (response) => {\n                        // 存储access_token\n                        let access_token = response.token_type + ' ' + response.access_token;\n                        this.$storage.setToken(access_token);\n\n                        // 存储过期时间戳\n                        let d = new Date();\n                        let times = d.getTime() + response.expires_in;\n                        this.$storage.setTimeStamp(times);\n\n                        setTimeout(() => {\n                            if(this.$route.query.collBack) {         // 判断是否有回调地址\n                                this.$router.replace({\n                                    path: decodeURIComponent(this.$route.query.collBack),\n                                    query: {}\n                                });\n                            } else{                                          // 跳转到首页\n                                this.$router.replace({\n                                    path: '/home',\n                                    query: {}\n                                });\n                            }\n                        }, 100)\n                    },\n                    error: (response) => {\n\n                    },\n                    complete: (response) => {\n                        this.showCodeDialog = false\n                    }\n                });\n                return false;\n            }\n        }\n    }\n}\n",{"version":3,"sources":["code.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"code.vue","sourceRoot":"src/view/login","sourcesContent":["<template>\n    <div>\n        <navBar :title=\"this.$route.query.title\"></navBar>\n        <div class=\"login\">\n            <div class=\"login-hender\">\n                <img src=\"../../image/login.png\" alt=\"\">\n            </div>\n            <div class=\"login-body\">\n                <div class=\"title\">输入短信验证码</div>\n                <p>验证码已发送到您的手机 {{mobile}}</p>\n                <div class=\"input\">\n                    <input maxlength=\"6\" type=\"tel\" v-model=\"code\" @focus=\"handleInputBlurBack\" :clearable=\"true\" placeholder=\"请输入验证码\" />\n                </div>\n                <div class=\"login-body-tisp\">\n                    <div class=\"login-body-number\">6位数字验证码</div>\n                    <div class=\"login-body-revert\" @click=\"handleSlideVerify\" v-if=\"!isCode\">发送验证码</div>\n                    <div class=\"login-body-revert\" v-else>{{codeTime}}S</div>\n                </div>\n                <div class=\"next\" @click=\"handleLogin\">下一步</div>\n            </div>\n\n            <!-- showCodeDialog是一个布尔值，当前页面点击按钮，修改它，子组件监听数据变化，加载滑动模块 -->\n            <Geet :isGeet=\"showCodeDialog\" @geetPath=\"GeetPath\" @clickChange=\"GeetChange\"></Geet>\n        </div>\n    </div>\n</template>\n\n<style src=\"./code.css\" scoped></style>\n\n<script>\n    import {Toast} from 'vant';\n    import navBar from '../../component/navBarTwo';\n    import mixins from '../../common/mixin';\n    import Geet from \"./Geet.vue\";\n\n    export default {\n        components: {\n            navBar,\n            Toast,\n            Geet\n        },\n        mixins: [mixins],\n        data: () => ({\n            inviter: 0,\n            isCode: false,         // 是否显示发生验证码\n            codeTime: 60,          // 手机倒计时\n            mobile: '',            // 手机\n            code: '',              // 验证码\n            showCodeDialog: false   // 极速校验\n        }),\n        created() {\n            this.mobile = this.$route.query.mobile;\n            // register         新用户\n            // forget           忘记密码\n            // password         密码登录\n            if(this.$route.query.inviter){\n                this.inviter = this.$route.query.inviter\n            }\n        },\n        mounted() {\n            // 自动调起滑动验证\n            const toast = Toast.loading({\n                mask: true,\n                duration: 0,\n                message: '加载中...'\n            });\n            setTimeout(() => {\n                this.handleSlideVerify();\n                toast.clear()\n            }, 1500)\n        },\n        methods: {\n            GeetChange(val) {   // 极验图片加载之后，通过更改控制变量实现可以再次加载\n                this.showCodeDialog = val;\n            },\n            GeetPath(val) {     // 接受到图形验证参数，将参数发往服务端进行验证\n                this.handleGetCode();\n                this.showCodeDialog = false;\n            },\n            // 发送验证码\n            handleGetCode: function () {\n                this.request({\n                    url: 'api/sendMobileCode',\n                    data: {\n                        mobile: this.mobile.replace(/[ ]/g,\"\")\n                    },\n                    success: (response) => {\n                        this.isCode = !this.isCode;\n\n                        let timer = setInterval(() => {\n                            if(this.codeTime > 0) {\n                                this.codeTime = this.codeTime - 1;\n                            } else {\n                                this.codeTime = 60;\n                                this.isCode = !this.isCode;\n\n                                clearInterval(timer)\n                            }\n                        }, 1000);\n                    },\n                    error: (response) => {\n                    },\n                    complete: () => {\n\n                    }\n                });\n            },\n            // 图形验证码\n            handleSlideVerify: function () {\n                this.showCodeDialog = !this.showCodeDialog;\n                window.scrollTo(0, 0);\n            },\n            // 登录操作\n            handleLogin: function () {\n                if(this.$route.query.type == 'register') {\n                    // 新用户 设置密码\n                    this.request({\n                        url: 'api/login',\n                        data: {\n                            mobile: this.mobile.replace(/[ ]/g,\"\"),\n                            code: this.code,\n                            inviter: this.inviter\n                        },\n                        success: (response) => {\n                            this.$router.push({\n                                path: '/setPassword',\n                                query: {\n                                    collBack: this.$route.query.collBack ? this.$route.query.collBack : '/'\n                                }\n                            });\n\n                            // 存储access_token\n                            let access_token = response.token_type + ' ' + response.access_token;\n                            this.$storage.setToken(access_token);\n\n                            // 存储过期时间戳\n                            let d = new Date();\n                            let times = d.getTime() + response.expires_in\n                            this.$storage.setTimeStamp(times);\n                        },\n                        error: (response) => {\n                            // 钱包生成失败 重新登录\n                            if(response.status_code == 488) {\n                                this.request({\n                                    url: 'api/login',\n                                    data: {\n                                        mobile: this.mobile.replace(/[ ]/g,\"\"),\n                                        code: this.code,\n                                        inviter: this.inviter\n                                    },\n                                    success: (response) => {\n                                        this.$router.push({\n                                            path: '/setPassword',\n                                            query: {\n                                                collBack: this.$route.query.collBack ? this.$route.query.collBack : '/'\n                                            }\n                                        });\n\n                                        // 存储access_token\n                                        let access_token = response.token_type + ' ' + response.access_token;\n                                        this.$storage.setToken(access_token);\n\n                                        // 存储过期时间戳\n                                        let d = new Date();\n                                        let times = d.getTime() + response.expires_in\n                                        this.$storage.setTimeStamp(times);\n                                    },\n                                    error: (response) => {\n\n                                    },\n                                    complete: (response) => {\n\n                                    }\n                                })\n                            }\n                        },\n                        complete: (response) => {\n                            this.showCodeDialog = false\n                        }\n                    });\n                    return false;\n                }\n                if(this.$route.query.type == 'forget') {\n                    // 重置密码\n                    this.request({\n                        url: 'api/login',\n                        data: {\n                            mobile: this.mobile.replace(/[ ]/g,\"\"),\n                            code: this.code,\n                            inviter: this.inviter\n                        },\n                        success: (response) => {\n                            // 存储access_token\n                            let access_token = response.token_type + ' ' + response.access_token;\n                            this.$storage.setToken(access_token);\n\n                            // 存储过期时间戳\n                            let d = new Date();\n                            let times = d.getTime() + response.expires_in\n                            this.$storage.setTimeStamp(times);\n\n                            this.$router.push({\n                                path: '/forgetPassword',\n                                title: '重置密码',\n                                query: {\n                                    code: this.code,\n                                    collBack: this.$route.query.collBack ? this.$route.query.collBack : '/'\n                                }\n                            });\n                        },\n                        error: (response) => {\n\n                        },\n                        complete: (response) => {\n                            this.showCodeDialog = false\n                        }\n                    });\n                    return false;\n                }\n                if(this.$route.query.type == 'password') {\n                    // 密码登录\n                    this.request({\n                        url: 'api/login',\n                        data: {\n                            mobile: this.mobile.replace(/[ ]/g,\"\"),\n                            code: this.code,\n                            inviter: this.inviter\n                        },\n                        success: (response) => {\n                            // 存储access_token\n                            let access_token = response.token_type + ' ' + response.access_token;\n                            this.$storage.setToken(access_token);\n\n                            // 存储过期时间戳\n                            let d = new Date();\n                            let times = d.getTime() + response.expires_in;\n                            this.$storage.setTimeStamp(times);\n\n                            setTimeout(() => {\n                                if(this.$route.query.collBack) {         // 判断是否有回调地址\n                                    this.$router.replace({\n                                        path: decodeURIComponent(this.$route.query.collBack),\n                                        query: {}\n                                    });\n                                } else{                                          // 跳转到首页\n                                    this.$router.replace({\n                                        path: '/home',\n                                        query: {}\n                                    });\n                                }\n                            }, 100)\n                        },\n                        error: (response) => {\n\n                        },\n                        complete: (response) => {\n                            this.showCodeDialog = false\n                        }\n                    });\n                    return false;\n                }\n            }\n        }\n    }\n</script>\n"]}]}