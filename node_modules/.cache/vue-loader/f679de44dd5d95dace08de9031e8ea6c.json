{"remainingRequest":"/Users/lirongzhi/Documents/深圳善链/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lirongzhi/Documents/深圳善链/src/view/wallet/addres/detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lirongzhi/Documents/深圳善链/src/view/wallet/addres/detail.vue","mtime":1572538946851},{"path":"/Users/lirongzhi/Documents/深圳善链/node_modules/cache-loader/dist/cjs.js","mtime":1572539003414},{"path":"/Users/lirongzhi/Documents/深圳善链/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport countTo from 'vue-count-to';\nimport mixins from '../../../common/mixin';\nimport navBar from '../../../component/navBar';\nimport { Field } from 'vant';\nimport Geet from \"../../login/Geet\";\n\nexport default {\n    components: {\n        countTo,\n        navBar,\n        Field,\n        Geet\n    },\n    mixins: [mixins],\n    data: () => ({\n        isCode: false,         // 是否显示发生验证码\n        codeTime: 60,          // 手机倒计时\n        account:\"\",             // 用户手机\n        code: '',               // 验证码\n        showCodeDialog: false,  // 极速校验\n        address: '',            // 转账地址\n        name: ''                // 名称\n    }),\n    created() {\n\n    },\n    mounted() {\n        this.handleGetUserInfo();\n    },\n    // 设置路由钩子，存储页面来源\n    beforeRouteEnter(to, from, next) {\n        next(vm=>{          //  这里的vm指的就是vue实例，可以用来当做this使用\n            sessionStorage.setItem('url_from', from.path);\n        })\n    },\n    methods: {\n        handleAdd: function () {\n            if(this.name == '') {\n                this.$toast.center('名称不能为空');\n                return\n            }\n            // 转账地址\n            let myreg = /^0x[a-fA-F0-9]{40}$/;\n            if(!myreg.test(this.address)) {\n                this.$toast.center('转账地址不合法');\n                return\n            }\n            if(this.code == '') {\n                this.$toast.center('验证码不能为空');\n                return\n            }\n            this.request({\n                url: 'api/address',\n                method: 'POST',\n                data: {\n                    currency_id: this.$route.query.id,\n                    address: this.address,\n                    code: this.code,\n                    name: this.name\n                },\n                success: (response) => {\n                    this.$toast.center('添加成功');\n\n                    this.$router.replace({\n                        path: '/walletAddresIndex',\n                        query: {\n                            title: this.$route.query.title,\n                            id: this.$route.query.id,\n                            amount: this.$route.query.amount\n                        }\n                    });\n                },\n                error: (response) => {\n\n                },\n                complete: (response) => {\n\n                }\n            });\n        },\n        handleSlideVerify: function () {\n            this.showCodeDialog = !this.showCodeDialog;\n            window.scrollTo(0, 0);\n        },\n        GeetChange(val) {   // 极验图片加载之后，通过更改控制变量实现可以再次加载\n            this.showCodeDialog = val;\n        },\n        GeetPath(val) {     // 接受到图形验证参数，将参数发往服务端进行验证\n            this.handleGetCode();\n            this.showCodeDialog = false;\n        },\n        // 初始化用户信息\n        handleGetUserInfo: function() {\n            this.request({\n                url: 'api/user',\n                method: 'GET',\n                data: { },\n                success: (response) => {\n                    this.account=response.mobile\n                },\n                error: (response) => {\n\n                },\n                complete: (response) => {\n\n                }\n            });\n        },\n        //获取验证码链接\n        handleGetCode: function () {\n            this.request({\n                url: 'api/sendMobileCode',\n                data: {\n                    mobile: this.account\n                },\n                success: (response) => {\n                    this.isCode = !this.isCode;\n\n                    let timer = setInterval(() => {\n                        if(this.codeTime > 0) {\n                            this.codeTime = this.codeTime - 1;\n                        } else {\n                            this.codeTime = 60;\n                            this.isCode = !this.isCode;\n\n                            clearInterval(timer)\n                        }\n                    }, 1000)\n                },\n                error: (response) => {\n                },\n                complete: () => {\n\n                }\n            });\n        },\n\n\n    }\n}\n",{"version":3,"sources":["detail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA","file":"detail.vue","sourceRoot":"src/view/wallet/addres","sourcesContent":["<template>\n    <div>\n        <navBar title=\"新增地址\" class=\"edit-bottom\"></navBar>\n        <div class=\"information\">\n            <p>名称</p>\n            <input type=\"text\" v-model=\"name\" placeholder=\"请输入名称\"/>\n        </div>\n        <div class=\"information\">\n            <p>转账地址</p>\n            <input type=\"text\" v-model=\"address\" placeholder=\"请输入转账地址\"/>\n        </div>\n        <div class=\"information\">\n            <p>验证码</p>\n            <input type=\"text\" v-model=\"code\" placeholder=\"请输入验证码\" />\n            <div class=\"invitation-code\">\n                <p class=\"text\" @click=\"handleSlideVerify\" v-if=\"!isCode\">点击获取</p>\n                <p class=\"identifying-right\" v-else>{{codeTime}}S</p>\n            </div>\n        </div>\n        <div class=\"edit-button\" @click=\"handleAdd\">\n            保存\n        </div>\n        <!-- showCodeDialog是一个布尔值，当前页面点击按钮，修改它，子组件监听数据变化，加载滑动模块 -->\n        <Geet :isGeet=\"showCodeDialog\" @geetPath=\"GeetPath\" @clickChange=\"GeetChange\"></Geet>\n    </div>\n</template>\n\n<style src=\"./detail.css\" scoped></style>\n\n<script>\n    import countTo from 'vue-count-to';\n    import mixins from '../../../common/mixin';\n    import navBar from '../../../component/navBar';\n    import { Field } from 'vant';\n    import Geet from \"../../login/Geet\";\n\n    export default {\n        components: {\n            countTo,\n            navBar,\n            Field,\n            Geet\n        },\n        mixins: [mixins],\n        data: () => ({\n            isCode: false,         // 是否显示发生验证码\n            codeTime: 60,          // 手机倒计时\n            account:\"\",             // 用户手机\n            code: '',               // 验证码\n            showCodeDialog: false,  // 极速校验\n            address: '',            // 转账地址\n            name: ''                // 名称\n        }),\n        created() {\n\n        },\n        mounted() {\n            this.handleGetUserInfo();\n        },\n        // 设置路由钩子，存储页面来源\n        beforeRouteEnter(to, from, next) {\n            next(vm=>{          //  这里的vm指的就是vue实例，可以用来当做this使用\n                sessionStorage.setItem('url_from', from.path);\n            })\n        },\n        methods: {\n            handleAdd: function () {\n                if(this.name == '') {\n                    this.$toast.center('名称不能为空');\n                    return\n                }\n                // 转账地址\n                let myreg = /^0x[a-fA-F0-9]{40}$/;\n                if(!myreg.test(this.address)) {\n                    this.$toast.center('转账地址不合法');\n                    return\n                }\n                if(this.code == '') {\n                    this.$toast.center('验证码不能为空');\n                    return\n                }\n                this.request({\n                    url: 'api/address',\n                    method: 'POST',\n                    data: {\n                        currency_id: this.$route.query.id,\n                        address: this.address,\n                        code: this.code,\n                        name: this.name\n                    },\n                    success: (response) => {\n                        this.$toast.center('添加成功');\n\n                        this.$router.replace({\n                            path: '/walletAddresIndex',\n                            query: {\n                                title: this.$route.query.title,\n                                id: this.$route.query.id,\n                                amount: this.$route.query.amount\n                            }\n                        });\n                    },\n                    error: (response) => {\n\n                    },\n                    complete: (response) => {\n\n                    }\n                });\n            },\n            handleSlideVerify: function () {\n                this.showCodeDialog = !this.showCodeDialog;\n                window.scrollTo(0, 0);\n            },\n            GeetChange(val) {   // 极验图片加载之后，通过更改控制变量实现可以再次加载\n                this.showCodeDialog = val;\n            },\n            GeetPath(val) {     // 接受到图形验证参数，将参数发往服务端进行验证\n                this.handleGetCode();\n                this.showCodeDialog = false;\n            },\n            // 初始化用户信息\n            handleGetUserInfo: function() {\n                this.request({\n                    url: 'api/user',\n                    method: 'GET',\n                    data: { },\n                    success: (response) => {\n                        this.account=response.mobile\n                    },\n                    error: (response) => {\n\n                    },\n                    complete: (response) => {\n\n                    }\n                });\n            },\n            //获取验证码链接\n            handleGetCode: function () {\n                this.request({\n                    url: 'api/sendMobileCode',\n                    data: {\n                        mobile: this.account\n                    },\n                    success: (response) => {\n                        this.isCode = !this.isCode;\n\n                        let timer = setInterval(() => {\n                            if(this.codeTime > 0) {\n                                this.codeTime = this.codeTime - 1;\n                            } else {\n                                this.codeTime = 60;\n                                this.isCode = !this.isCode;\n\n                                clearInterval(timer)\n                            }\n                        }, 1000)\n                    },\n                    error: (response) => {\n                    },\n                    complete: () => {\n\n                    }\n                });\n            },\n\n\n        }\n    }\n</script>\n"]}]}